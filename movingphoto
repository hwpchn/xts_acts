import { dataSharePredicates } from '@kit.ArkData';
import photoAccessHelper from '@kit.ArkData';

async function testMultiExposureEffect() {
  console.info('testMultiExposureEffect 开始测试');

  // 1. 获取一个 PhotoAsset（参考 saveFormInfo 示例）
  let predicates = new dataSharePredicates.DataSharePredicates();
  let fetchOptions = {
    fetchColumns: [],
    predicates: predicates
  };
  let fetchResult = await phAccessHelper.getAssets(fetchOptions);
  let photoAsset = await fetchResult.getFirstObject();

  // 2. 检查是否是动态照片（简单判断）
  if (photoAsset.photoType !== photoAccessHelper.PhotoType.MOVING_PHOTO) {
    console.info('这不是动态照片，测试可能无法继续');
    return;
  }

  // 3. 设置效果模式为 MULTI_EXPOSURE
  let assetChangeRequest = new photoAccessHelper.MediaAssetChangeRequest(photoAsset);
  assetChangeRequest.setEffectMode(photoAccessHelper.MovingPhotoEffectMode.MULTI_EXPOSURE);

  // 4. 应用更改
  await phAccessHelper.applyChanges(assetChangeRequest);
  console.info('成功设置 MULTI_EXPOSURE 效果模式');
}

// 调用函数开始测试
testMultiExposureEffect();
