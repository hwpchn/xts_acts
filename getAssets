    // 新增回调方式测试401错误码
    //参数选择：
    //使用"invalid"作为fetchOps，因为FetchOptions是一个对象类型，传递字符串会导致参数类型不正确，从而触发401错误码。
   //您也可以尝试其他无效参数，例如null、{}（空对象）或缺少predicates的对象，具体取决于FetchOptions的实现细节。
    /**
     * @tc.number    : SUB_PHOTOACCESS_HELPER_CALLBACK_GET_ASSETS_0500
     * @tc.name      : getAssets_callback_005
     * @tc.desc      : Test getAssets with invalid fetchOps to trigger 401 error
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('getAssets_callback_005', 2, async (done: Function) => {
      const testNum = 'getAssets_callback_005';
      const fetchOps = "invalid"; // 故意传递一个无效类型的参数
      try {
        helper.getAssets(fetchOps, (err, fetchResult) => {
          try {
            if (err !== undefined) {
              console.info(`${testNum} getAssets failed; err: ${err.code}, ${err.message}`);
              expect(err.code).assertEqual(401); // 验证错误码为401
            } else {
              console.info(`${testNum} getAssets suc; fetchResult: ${fetchResult.getCount()}`);
              fetchResult.close();
              expect(false).assertTrue();
            }
          } catch (error) {
            console.info(`${testNum} getAssets failed; error: ${error}`);
          }
          done();
        });
      } catch (error) {
        console.info(`${testNum} failed; error: ${error}`);
        done();
      }
    });

    // 新增Promise方式测试401错误码
    /**
     * @tc.number    : SUB_PHOTOACCESS_HELPER_PROMISE_GET_ASSETS_0500
     * @tc.name      : getAssets_promise_005
     * @tc.desc      : Test getAssets with invalid fetchOps to trigger 401 error
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 2
     */
    it('getAssets_promise_005', 2, async (done: Function) => {
      const testNum = 'getAssets_promise_005';
      const fetchOps = "invalid"; // 故意传递一个无效类型的参数
      try {
        await helper.getAssets(fetchOps);
        expect(false).assertTrue();
        done();
      } catch (error) {
        console.info(`${testNum} failed; error: ${error.code}, ${error.message}`);
        expect(error.code).assertEqual(401); // 验证错误码为401
        done();
      }
    });
  });
}
